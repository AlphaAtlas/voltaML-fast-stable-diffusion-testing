import{_ as e,c as s,o as a,a as n}from"./app.0ffd4db5.js";const m=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[{"level":2,"title":"Requirements","slug":"requirements","link":"#requirements","children":[{"level":3,"title":"1. Clone the repository","slug":"_1-clone-the-repository","link":"#_1-clone-the-repository","children":[]},{"level":3,"title":"2. Edit the docker-compose.yml file","slug":"_2-edit-the-docker-compose-yml-file","link":"#_2-edit-the-docker-compose-yml-file","children":[]},{"level":3,"title":"3. Edit the .env file","slug":"_3-edit-the-env-file","link":"#_3-edit-the-env-file","children":[]},{"level":3,"title":"4. Run the container","slug":"_4-run-the-container","link":"#_4-run-the-container","children":[]}]}],"relativePath":"installation/docker.md","lastUpdated":1679138189000}'),o={name:"installation/docker.md"},l=n(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-hidden="true">#</a></h1><p>This is the easiest setup possible that should just work. Docker provides reproducible environments and makes it easy to run the application on any system.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-hidden="true">#</a></h2><ul><li><strong>Operating system:</strong> Windows or Linux</li><li><strong>Graphics card:</strong> NVIDIA GPU with CUDA support</li><li><strong>Driver version:</strong> 515+ with CUDA</li><li><strong>Docker</strong>: <a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noreferrer">Docker Desktop</a></li></ul><h3 id="_1-clone-the-repository" tabindex="-1">1. Clone the repository <a class="header-anchor" href="#_1-clone-the-repository" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro has-diff"><code><span class="line"><span style="color:#ABB2BF;">git </span><span style="color:#98C379;">clone</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">https://github.com/VoltaML/voltaML-fast-stable-diffusion</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-b</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">experimental</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--single-branch</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-edit-the-docker-compose-yml-file" tabindex="-1">2. Edit the <code>docker-compose.yml</code> file <a class="header-anchor" href="#_2-edit-the-docker-compose-yml-file" aria-hidden="true">#</a></h3><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">XXX:/app/data</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">YYY/.cache/huggingface:/root/.cache/huggingface</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>where <code>XXX</code> is the path to the directory where you want to store all the data (converted models, outputs) and <code>YYY</code> is the path to your home directory (<code>C:\\Users\\YOUR_USERNAME</code> or <code>/home/USER</code>).</p><h3 id="_3-edit-the-env-file" tabindex="-1">3. Edit the <code>.env</code> file <a class="header-anchor" href="#_3-edit-the-env-file" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">HUGGINGFACE_TOKEN</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">PLACE_YOUR_TOKEN_HERE</span></span>
<span class="line"><span style="color:#E06C75;">LOG_LEVEL</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">INFO</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># INFO, DEBUG, WARNING, ERROR</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_4-run-the-container" tabindex="-1">4. Run the container <a class="header-anchor" href="#_4-run-the-container" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">compose</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--service-ports</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">voltaml</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>or if you have older version of docker</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">docker-compose </span><span style="color:#98C379;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-p</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">5003</span><span style="color:#98C379;">:</span><span style="color:#D19A66;">5003</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">voltaml</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,15),r=[l];function t(p,i,c,d,h,u){return a(),s("div",null,r)}const b=e(o,[["render",t]]);export{m as __pageData,b as default};
